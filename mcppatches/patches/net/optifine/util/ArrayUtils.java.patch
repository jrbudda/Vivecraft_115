--- a/net/optifine/util/ArrayUtils.java
+++ b/net/optifine/util/ArrayUtils.java
@@ -71,7 +71,7 @@
         {
             int i = arr.length;
             int j = i + objs.length;
-            Object[] aobject = Array.newInstance(arr.getClass().getComponentType(), j);
+            Object[] aobject = (Object[]) Array.newInstance(arr.getClass().getComponentType(), j);
             System.arraycopy(arr, 0, aobject, 0, i);
             System.arraycopy(objs, 0, aobject, i, objs.length);
             return aobject;
@@ -88,7 +88,7 @@
         {
             int i = arr.length;
             int j = i + 1;
-            Object[] aobject = Array.newInstance(arr.getClass().getComponentType(), j);
+            Object[] aobject = (Object[]) Array.newInstance(arr.getClass().getComponentType(), j);
             System.arraycopy(arr, 0, aobject, 0, i);
             aobject[i] = obj;
             return aobject;
@@ -99,7 +99,7 @@
     {
         List list = new ArrayList<>(Arrays.asList(arr));
         list.add(index, obj);
-        Object[] aobject = Array.newInstance(arr.getClass().getComponentType(), list.size());
+        Object[] aobject = (Object[]) Array.newInstance(arr.getClass().getComponentType(), list.size());
         return list.toArray(aobject);
     }
 
@@ -264,7 +264,7 @@
         }
         else
         {
-            Object[] aobject = Array.newInstance(elementClass, coll.size());
+            Object[] aobject = (Object[]) Array.newInstance(elementClass, coll.size());
             return coll.toArray(aobject);
         }
     }
