--- a/net/minecraft/entity/monster/EndermanEntity.java
+++ b/net/minecraft/entity/monster/EndermanEntity.java
@@ -6,6 +6,10 @@
 import java.util.UUID;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.ServerVivePlayer;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockState;
 import net.minecraft.block.Blocks;
@@ -46,11 +50,13 @@
 import net.minecraft.util.math.BlockRayTraceResult;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.math.RayTraceContext;
+import net.minecraft.util.math.RayTraceResult.Type;
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.world.GameRules;
 import net.minecraft.world.IWorld;
 import net.minecraft.world.IWorldReader;
 import net.minecraft.world.World;
+import net.optifine.reflect.Reflector;
 
 public class EndermanEntity extends MonsterEntity
 {
@@ -99,7 +105,6 @@
 
     public void setAttackTarget(@Nullable LivingEntity entitylivingbaseIn)
     {
-        super.setAttackTarget(entitylivingbaseIn);
         IAttributeInstance iattributeinstance = this.getAttribute(SharedMonsterAttributes.MOVEMENT_SPEED);
 
         if (entitylivingbaseIn == null)
@@ -119,6 +124,9 @@
                 iattributeinstance.applyModifier(ATTACKING_SPEED_BOOST);
             }
         }
+        //Forge move down here
+        super.setAttackTarget(entitylivingbaseIn);
+        //
     }
 
     protected void registerData()
@@ -191,15 +199,33 @@
         }
         else
         {
+        	//VIVE FIX
             Vec3d vec3d = player.getLook(1.0F).normalize();
             Vec3d vec3d1 = new Vec3d(this.getPosX() - player.getPosX(), this.getPosYEye() - player.getPosYEye(), this.getPosZ() - player.getPosZ());
-            double d0 = vec3d1.length();
-            vec3d1 = vec3d1.normalize();
-            double d1 = vec3d.dotProduct(vec3d1);
-            return d1 > 1.0D - 0.025D / d0 ? player.canEntityBeSeen(this) : false;
+            
+        	ServerVivePlayer vp = NetworkHelper.vivePlayers.get(player.getUniqueID());
+        	boolean vr = vp !=null && vp.isVR();
+        	if (vr)
+        	{
+        		vec3d = vp.getHMDDir();
+        		Vec3d hmdpos = vp.getHMDPos();
+        		vec3d1 = new Vec3d(this.getPosX() - hmdpos.x, this.getBoundingBox().minY + (double)this.getEyeHeight() - hmdpos.y, this.getPosZ() - hmdpos.z);
+        	}
+        	//          
+        	double d0 = vec3d1.length();
+        	vec3d1 = vec3d1.normalize();
+        	double d1 = vec3d.dotProduct(vec3d1);
+        	//Vivecraft
+        	return d1 > 1.0D - 0.025D / d0 ? (vr ? canSee(vp.getHMDPos(), this.getEyePosition(1)): player.canEntityBeSeen(this)) : false;
+        	//
         }
     }
-
+    
+    private boolean canSee(Vec3d source, Vec3d Target)
+    {
+        return this.world.rayTraceBlocks(new RayTraceContext(source, Target, RayTraceContext.BlockMode.COLLIDER, RayTraceContext.FluidMode.NONE, this)).getType() == Type.MISS;
+    }
+    
     protected float getStandingEyeHeight(Pose poseIn, EntitySize sizeIn)
     {
         return 2.55F;
@@ -281,6 +307,16 @@
 
         if (flag && !flag1)
         {
+        	//Forge
+            Object event = Reflector.newInstance(Reflector.EnderTeleportEvent_Constructor, this, x, y, z, 0);
+            if(Reflector.postForgeBusEvent(event)) return false;
+            if(event != null) {
+            	x= Reflector.callDouble(event, Reflector.EnderTeleportEvent_getTargetX);
+            	y= Reflector.callDouble(event, Reflector.EnderTeleportEvent_getTargetY);
+            	z= Reflector.callDouble(event, Reflector.EnderTeleportEvent_getTargetZ);           	
+            }
+            //
+            
             boolean flag2 = this.attemptTeleport(x, y, z, true);
 
             if (flag2)
@@ -484,11 +520,16 @@
 
         public boolean shouldExecute()
         {
+        	boolean flag = !this.enderman.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING);
+        	//Forge
+        	if(Reflector.ForgeEventFactory_getMobGriefingEvent.exists())
+        		flag = !Reflector.callBoolean(Reflector.ForgeEventFactory_getMobGriefingEvent, this.enderman.world, this.enderman);
+        	//
             if (this.enderman.getHeldBlockState() == null)
             {
                 return false;
             }
-            else if (!this.enderman.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING))
+            else if (flag)
             {
                 return false;
             }
@@ -510,8 +551,11 @@
             BlockPos blockpos1 = blockpos.down();
             BlockState blockstate1 = iworld.getBlockState(blockpos1);
             BlockState blockstate2 = this.enderman.getHeldBlockState();
-
-            if (blockstate2 != null && this.func_220836_a(iworld, blockpos, blockstate2, blockstate, blockstate1, blockpos1))
+            //Forge
+            Object snapshot = Reflector.newInstance(Reflector.BlockSnapshot_Constructor, iworld, blockpos, blockstate1);
+            boolean flag = Reflector.callBoolean(Reflector.ForgeEventFactory_onBlockPlace, enderman, snapshot, net.minecraft.util.Direction.UP);
+            //
+            if (blockstate2 != null && this.func_220836_a(iworld, blockpos, blockstate2, blockstate, blockstate1, blockpos1)  && !flag) 
             {
                 iworld.setBlockState(blockpos, blockstate2, 3);
                 this.enderman.setHeldBlockState((BlockState)null);
@@ -520,7 +564,11 @@
 
         private boolean func_220836_a(IWorldReader p_220836_1_, BlockPos p_220836_2_, BlockState p_220836_3_, BlockState p_220836_4_, BlockState p_220836_5_, BlockPos p_220836_6_)
         {
-            return p_220836_4_.isAir() && !p_220836_5_.isAir() && p_220836_5_.isCollisionShapeOpaque(p_220836_1_, p_220836_6_) && p_220836_3_.isValidPosition(p_220836_1_, p_220836_2_);
+        	if(Reflector.IForgeBlockState_isAir2.exists()) {
+        		boolean flag = Reflector.callBoolean(p_220836_4_, Reflector.IForgeBlockState_isAir2, p_220836_1_, p_220836_2_);
+        		return !flag && p_220836_5_.isCollisionShapeOpaque(p_220836_1_, p_220836_6_) && p_220836_3_.isValidPosition(p_220836_1_, p_220836_2_);
+        	}else
+        		return p_220836_4_.isAir() && !p_220836_5_.isAir() && p_220836_5_.isCollisionShapeOpaque(p_220836_1_, p_220836_6_) && p_220836_3_.isValidPosition(p_220836_1_, p_220836_2_);
         }
     }
 
@@ -572,11 +620,16 @@
 
         public boolean shouldExecute()
         {
+        	boolean flag = !this.enderman.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING);
+        	//Forge
+        	if(Reflector.ForgeEventFactory_getMobGriefingEvent.exists())
+        		flag = !Reflector.callBoolean(Reflector.ForgeEventFactory_getMobGriefingEvent, this.enderman.world, this.enderman);
+        	//
             if (this.enderman.getHeldBlockState() != null)
             {
                 return false;
             }
-            else if (!this.enderman.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING))
+            else if (!flag)
             {
                 return false;
             }
