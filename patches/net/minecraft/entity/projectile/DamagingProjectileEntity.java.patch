--- a/net/minecraft/entity/projectile/DamagingProjectileEntity.java
+++ b/net/minecraft/entity/projectile/DamagingProjectileEntity.java
@@ -1,5 +1,8 @@
 package net.minecraft.entity.projectile;
 
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.ServerVivePlayer;
+
 import net.minecraft.block.BlockState;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityType;
@@ -11,6 +14,7 @@
 import net.minecraft.particles.IParticleData;
 import net.minecraft.particles.ParticleTypes;
 import net.minecraft.util.DamageSource;
+import net.minecraft.util.Hand;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.BlockRayTraceResult;
 import net.minecraft.util.math.MathHelper;
@@ -18,6 +22,7 @@
 import net.minecraft.util.math.RayTraceResult;
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.world.World;
+import net.optifine.reflect.Reflector;
 
 public abstract class DamagingProjectileEntity extends Entity
 {
@@ -91,7 +96,13 @@
             ++this.ticksInAir;
             RayTraceResult raytraceresult = ProjectileHelper.rayTrace(this, true, this.ticksInAir >= 25, this.shootingEntity, RayTraceContext.BlockMode.COLLIDER);
 
-            if (raytraceresult.getType() != RayTraceResult.Type.MISS)
+            //Forge
+            boolean flag = false;
+            if(Reflector.ForgeEventFactory_onProjectileImpactD.exists())
+            	flag = Reflector.callBoolean(Reflector.ForgeEventFactory_onProjectileImpactD, this, raytraceresult);
+            //
+            
+			if (raytraceresult.getType() != RayTraceResult.Type.MISS && !flag)
             {
                 this.onImpact(raytraceresult);
             }
@@ -209,6 +220,13 @@
             if (source.getTrueSource() != null)
             {
                 Vec3d vec3d = source.getTrueSource().getLookVec();
+                //Vivecraft.
+            	ServerVivePlayer vp = NetworkHelper.vivePlayers.get(source.getTrueSource().getUniqueID());
+            	if (vp !=null && vp.isVR())
+            	{ 
+            		vec3d = vp.getHMDDir();
+            	}               
+            	//
                 this.setMotion(vec3d);
                 this.accelerationX = vec3d.x * 0.1D;
                 this.accelerationY = vec3d.y * 0.1D;
